1) Given a list, write a function that changes all positive numbers
 in the list to "big".
Example: biggie_size([-1, 3, 5, -5]) returns that same list,
 but whose values are now [-1, "big", "big", -5]
def biggie_size(array):
    for i in range(len(array)):
        if array[i]>0:
            array[i]='big'
    return array

2)Given a list of numbers, create a function to replace the last value with the
 number of positive values. (Note that zero is not considered to be a positive number).
Example: count_positives([-1,1,1,1]) changes the original list to [-1,1,1,3] and returns it
Example: count_positives([1,6,-4,-2,-7,-2]) changes the list to [1,6,-4,-2,-7,2] 
and returns it

3)Create a function that takes a list and returns the sum of all the values in the list.
Example: sum_total([1,2,3,4]) should return 10
Example: sum_total([6,3,-2]) should return 7
def sum_total(input_list):
    total = sum(input_list)
    return total

4)Create a function that takes a list and returns the average of all the values.x
Example: average([1,2,3,4]) should return 2.5
def average(input_list):
    total = sum(input_list)
    avg = total / len(input_list)
    return avg

5)Create a function that takes a list and returns the length of the list.
Example: length([37,2,1,-9]) should return 4
Example: length([]) should return 0
def length(input_list):
    return len(input_list)

6) Create a function that takes a list of numbers and returns the minimum value in the list.
 If the list is empty, have the function return False.
Example: minimum([37,2,1,-9]) should return -9
Example: minimum([]) should return False
def minimum(input_list):
        min_val = min(input_list)
        return min_val

7) Create a function that takes a list and returns the maximum value in the list.
 If the list is empty, have the function return False.
Example: maximum([37,2,1,-9]) should return 37
Example: maximum([]) should return False
def maximum(input_list):
        max_val = max(input_list)
        return max_val

8) Create a function that takes a list and returns a dictionary that has the sumTotal, average, minimum, maximum and length of the list.
Example: ultimate_analysis([37,2,1,-9]) should return {'sumTotal': 31, 'average': 7.75, 'minimum': -9, 'maximum': 37, 'length': 4 }
def ultimate_analysis(input_list):
 result = {
        'sumTotal': sum(input_list),
        'average': sum(input_list) / len(input_list),
        'minimum': min(input_list),
        'maximum': max(input_list),
        'length': len(input_list)
    }

    return result
